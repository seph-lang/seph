<?xml version="1.0" encoding="utf-8"?>

<project basedir="." default="jar" name="seph">
  <description>
    seph is a past generation language, based on Ioke, Clojure and Erjang
  </description>

  <property file="build.properties"/>
  <property file="default.build.properties"/>
  <property file="version.properties"/>

  <path id="build.classpath">
    <fileset dir="${lib.build.dir}" includes="*.jar"/>
    <fileset dir="${lib.release.dir}" includes="*.jar"/>
  </path>

  <path id="test.classpath">
    <fileset dir="${lib.build.dir}" includes="*.jar"/>
  </path>

  <path id="main.classpath">
    <pathelement path="${main.classes.dir}"/>
  </path>

  <path id="run.classpath">
    <fileset dir="${lib.release.dir}" includes="*.jar"/>
    <pathelement path="${main.classes.dir}"/>
  </path>

  <target name="prepare" description="Creates the directories needed for building">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${main.classes.dir}"/>
    <mkdir dir="${test.classes.dir}"/>
    <mkdir dir="${test.results.dir}"/>
    <mkdir dir="${html.test.results.dir}"/>
    <mkdir dir="${src.gen.dir}/seph/lang/bim"/>
    <mkdir dir="${release.dir}"/>
  </target>

  <target name="compile-annotation-bims" depends="prepare">
    <javac destdir="${main.classes.dir}" debug="true" encoding="UTF-8">
      <classpath refid="build.classpath"/>
      <src path="${src.dir}"/>
      <include name="seph/lang/anno/AnnotationBimCreator.java"/>
      <include name="seph/lang/SephSingleton.java"/>
      <include name="seph/lang/SephCell.java"/>
      <include name="seph/lang/SephMethod.java"/>
      <include name="seph/lang/SephKind.java"/>
    </javac>
  </target>

  <target name="generate_version_data" depends="prepare" description="Generates version data">
    <tstamp>
      <format property="build.time" pattern="yyyy-MM-dd hh:mm"/>
    </tstamp>

    <exec executable="git" outputproperty="seph.revision" failonerror="false" failifexecutionfails="false">
      <arg line="log -1 --format=format:%h"/>
    </exec>

    <filter token="DATE" value="${build.time}"/>
    <filter token="COMMIT" value="${seph.revision}"/>
    <filter token="VERSION_NUMBER" value="${VERSION_NUMBER}"/>
    <filter token="VERSION_STRING" value="Seph ${VERSION_NUMBER}${VERSION_ADDITION}"/>

    <copy todir="${classes.dir}" filtering="true" overwrite="true">
      <fileset dir="${src.dir}" includes="**/*.properties"/>
    </copy>
  </target>

  <target name="add_new_version_file" depends="generate_version_data" description="Adds a new version property file to an existing jar-file">
    <jar destfile="${lib.dir}/seph.jar" update="true">
      <fileset dir="${classes.dir}">
        <include name="**/*.properties"/>
      </fileset>
    </jar>
  </target>

  <target name="compile" depends="compile-annotation-bims" description="Compile the source files for the project.">
    <tstamp>
      <format property="build.time" pattern="yyyy-MM-dd hh:mm"/>
    </tstamp>

    <exec executable="git" outputproperty="seph.revision" failonerror="false" failifexecutionfails="false">
      <arg line="log -1 --format=format:%h"/>
    </exec>

    <filter token="DATE" value="${build.time}"/>
    <filter token="COMMIT" value="${seph.revision}"/>
    <filter token="VERSION_NUMBER" value="${VERSION_NUMBER}"/>
    <filter token="VERSION_STRING" value="Seph ${VERSION_NUMBER}${VERSION_ADDITION}"/>

    <apt factory="seph.lang.anno.AnnotationBimCreator" destdir="${main.classes.dir}" debug="true" encoding="UTF-8">
      <classpath refid="build.classpath"/>
      <src path="${src.dir}"/>
      <src path="${src.gen.dir}"/>
      <include name="**/*.java"/>
    </apt>

    <copy todir="${main.classes.dir}" filtering="true" overwrite="true">
      <fileset dir="${src.dir}" includes="**/*.properties"/>
    </copy>

    <copy todir="${main.classes.dir}">
      <fileset dir="${src.raw.dir}" includes="builtin/**/*.sp"/>
    </copy>
  </target>

  <target name="compile-tests" depends="compile" description="Compile the test source files for the project.">
    <javac destdir="${test.classes.dir}" debug="true" source="${javac.version}" target="${javac.version}" encoding="UTF-8">
      <classpath refid="test.classpath"/>
      <classpath refid="main.classpath"/>
      <src path="${src.test.dir}"/>
      <include name="**/*.java"/>
    </javac>
  </target>

  <target name="ci-compile-tests" depends="prepare" description="Compile the test source files for the CI.">
    <javac destdir="${test.classes.dir}" debug="true" source="${javac.version}" target="${javac.version}" encoding="UTF-8">
      <classpath refid="test.classpath"/>
      <classpath refid="main.classpath"/>
      <src path="${src.test.dir}"/>
      <include name="**/*.java"/>
    </javac>
  </target>

  <target name="buster" depends="compile-tests" description="Runs only the buster tests">
    <junit fork="yes" forkMode="once" failureproperty="junit.failure" showoutput="false" timeout="1800000">
      <jvmarg value="-server"/>
      <!-- <jvmarg value="-XX:+UnlockDiagnosticVMOptions"/> -->
      <!-- <jvmarg value="-XX:-UseRicochetFrames"/> -->
      <jvmarg value="-XX:+TieredCompilation"/>
      <jvmarg value="-ea"/>
      <classpath refid="test.classpath"/>
      <sysproperty key="file.encoding" value="UTF-8"/>
      <formatter type="brief" usefile="false" />

      <test name="seph.lang.code.Buster" fork="true"/>
    </junit>
    <fail if="junit.failure" message="Test(s) failed."/>
  </target>

  <target name="test" depends="compile-tests" description="Runs all Seph tests">
    <junit fork="yes" forkMode="once" failureproperty="junit.failure" showoutput="true" timeout="1800000">
      <jvmarg value="-server"/>
      <!-- <jvmarg value="-XX:+UnlockDiagnosticVMOptions"/> -->
      <!-- <jvmarg value="-XX:-UseRicochetFrames"/> -->
      <jvmarg value="-XX:+TieredCompilation"/>
      <jvmarg value="-ea"/>
      <jvmarg value="-Xbootclasspath/a:${main.classes.dir}:${test.classes.dir}:lib/release/asm-all-4.0.jar:lib/release/jline-0.9.93.jar:lib/build/junit-4.8.2.jar:lib/build/jakarta-oro-2.0.8.jar:lib/build/log4j-1.2.9.jar"/>
      <classpath refid="test.classpath"/>
      <sysproperty key="file.encoding" value="UTF-8"/>
      <formatter type="brief" usefile="false" />

      <batchtest fork="yes">
        <fileset dir="${src.test.dir}">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
    <fail if="junit.failure" message="Test(s) failed."/>
  </target>

  <target name="ci-test" depends="ci-compile-tests" description="Runs all Seph tests with XML output for the CI">
    <junit fork="yes" forkMode="once" failureproperty="junit.failure" showoutput="true" timeout="1800000">
      <jvmarg value="-server"/>
      <jvmarg value="-ea"/>
      <jvmarg value="-XX:+TieredCompilation"/>
      <jvmarg value="-Xbootclasspath/a:${main.classes.dir}:${test.classes.dir}:lib/release/asm-all-4.0.jar:lib/release/jline-0.9.93.jar:lib/build/junit-4.8.2.jar:lib/build/jakarta-oro-2.0.8.jar:lib/build/log4j-1.2.9.jar"/>
      <classpath refid="test.classpath"/>
      <sysproperty key="file.encoding" value="UTF-8"/>
      <formatter type="brief" usefile="false" />
      <formatter type="xml"/>

      <batchtest fork="yes" todir="${test.results.dir}">
        <fileset dir="${src.test.dir}">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
    <delete dir="${html.test.results.dir}" quiet="true"/>
    <delete file="${test.results.dir}/TESTS-TestSuites.xml" quiet="true"/>
    <junitreport todir="${test.results.dir}" tofile="../TESTS-TestSuites.xml">
      <fileset dir="${test.results.dir}" includes="TEST-*.xml"/>
      <report format="frames" todir="${html.test.results.dir}"/>
    </junitreport>
    <fail if="junit.failure" message="Test(s) failed."/>
  </target>

  <target name="ci-jar" description="Create the seph.jar file without depending on earlier stages">
    <jar destfile="${lib.dir}/seph.jar">
      <fileset dir="${main.classes.dir}">
        <include name="**/*.class"/>
        <include name="**/*.sp"/>
        <include name="**/*.properties"/>
      </fileset>
      <zipfileset src="${lib.release.dir}/jline-0.9.93.jar" includes="**/*"/>
      <zipfileset src="${lib.release.dir}/asm-all-4.0.jar" includes="**/*"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="seph.lang.Main"/>
      </manifest>
    </jar>
  </target>





  <macrodef name="bench">
    <attribute name="file"/>
    <sequential>
      <java classname="seph.lang.Main" fork="true" failonerror="true" maxmemory="256m">
        <jvmarg value="-server"/>

        <sysproperty key="seph.benchmark.format" value="human"/>
        <sysproperty key="file.encoding" value="UTF-8"/>

        <jvmarg value="-Xbootclasspath/a:${main.classes.dir}:lib/seph.jar:lib/release/asm-all-4.0.jar:lib/release/jline-0.9.93.jar"/>

        <arg line="@{file}"/>
      </java>
    </sequential>
  </macrodef>

  <macrodef name="bench-ci">
    <attribute name="file"/>
    <attribute name="append" default="true"/>
    <sequential>
      <echo>Benchmark: @{file}</echo>
      <java classname="seph.lang.Main" fork="true" failonerror="true" output="${build.dir}/all_bench_results" logError="true" append="@{append}" maxmemory="256m">
        <jvmarg value="-server"/>
        <jvmarg value="-XX:+TieredCompilation"/>

        <sysproperty key="seph.benchmark.format" value="robot"/>
        <sysproperty key="file.encoding" value="UTF-8"/>

        <jvmarg value="-Xbootclasspath/a:${main.classes.dir}:lib/seph.jar:lib/release/asm-all-4.0.jar:lib/release/jline-0.9.93.jar"/>

        <arg line="@{file}"/>
      </java>
    </sequential>
  </macrodef>

  <target name="benchmark" depends="prepare" description="Runs all Seph benchmarks and outputs everything on the console">
    <bench file="bench/bench_fact.sp"/>
    <bench file="bench/bench_fib.sp"/>
    <bench file="bench/bench_arithmetic.sp"/>
    <bench file="bench/bench_intrinsic_true.sp"/>
    <bench file="bench/bench_intrinsic_false.sp"/>
    <bench file="bench/bench_intrinsic_nil.sp"/>
    <bench file="bench/bench_intrinsic_if.sp"/>
    <bench file="bench/bench_create_abstraction.sp"/>
    <bench file="bench/bench_object_creation.sp"/>
    <bench file="bench/bench_read_cell.sp"/>
    <bench file="bench/bench_read_lexical.sp"/>
  </target>

  <target name="ci-benchmark" depends="prepare" description="Runs all Seph benchmarks and outputs everything to a file in build">
    <bench-ci file="bench/bench_fact.sp" append="false"/>
    <bench-ci file="bench/bench_fib.sp"/>
    <bench-ci file="bench/bench_arithmetic.sp"/>
    <bench-ci file="bench/bench_intrinsic_true.sp"/>
    <bench-ci file="bench/bench_intrinsic_false.sp"/>
    <bench-ci file="bench/bench_intrinsic_nil.sp"/>
    <bench-ci file="bench/bench_intrinsic_if.sp"/>
    <bench-ci file="bench/bench_create_abstraction.sp"/>
    <bench-ci file="bench/bench_object_creation.sp"/>
    <bench-ci file="bench/bench_read_cell.sp"/>
    <bench-ci file="bench/bench_read_lexical.sp"/>

    <tstamp>
      <format property="current.timestamp" pattern="yyyy_MM_dd_hh_mm"/>
    </tstamp>
    
    <copy file="${build.dir}/all_bench_results" tofile="/var/log/seph_benchmarks/all_bench_results-${current.timestamp}" overwrite="true"/>
    
    <exec executable="ruby" input="massage_benchmark_info.rb"/>
  </target>

  <target name="ci-massage-benchmarks" depends="prepare" description="Output information about benchmarks to a series of images">
    <exec executable="ruby" input="massage_benchmark_info.rb"/>
  </target>

  <target name="jar" depends="test" description="Create the seph.jar file">
    <jar destfile="${lib.dir}/seph.jar">
      <fileset dir="${main.classes.dir}">
        <include name="**/*.class"/>
        <include name="**/*.sp"/>
        <include name="**/*.properties"/>
      </fileset>
      <zipfileset src="${lib.release.dir}/jline-0.9.93.jar" includes="**/*"/>
      <zipfileset src="${lib.release.dir}/asm-all-4.0.jar" includes="**/*"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="seph.lang.Main"/>
      </manifest>
    </jar>
  </target>

  <target name="jar-notest" depends="compile" description="Create the seph.jar file">
    <jar destfile="${lib.dir}/seph.jar">
      <fileset dir="${main.classes.dir}">
        <include name="**/*.class"/>
        <include name="**/*.sp"/>
        <include name="**/*.properties"/>
      </fileset>
      <zipfileset src="${lib.release.dir}/jline-0.9.93.jar" includes="**/*"/>
      <zipfileset src="${lib.release.dir}/asm-all-4.0.jar" includes="**/*"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="seph.lang.Main"/>
      </manifest>
    </jar>
  </target>

  <target name="dist-bin" depends="jar, ci-dist-bin"/>

  <target name="ci-push-distribution-files" depends="prepare">
    <copy file="${lib.dir}/seph.jar" tofile="${release.dir}/seph-${VERSION_NUMBER}${VERSION_ADDITION}.jar" overwrite="true"/>

    <scp todir="seph-lang.org@seph-lang.org:/home/seph-lang.org/web/public/dist" keyfile="${user.home}/.ssh/id_rsa">
      <fileset dir="${release.dir}">
        <include name="seph-${VERSION_NUMBER}${VERSION_ADDITION}.tar.gz"/>
        <include name="seph-${VERSION_NUMBER}${VERSION_ADDITION}.zip"/>
        <include name="seph-${VERSION_NUMBER}${VERSION_ADDITION}.jar"/>
      </fileset>
    </scp>    

    <sshexec host="seph-lang.org" username="seph-lang.org" keyfile="${user.home}/.ssh/id_rsa" command="(cd /home/seph-lang.org/web/public/dist; rm -rf *-latest.*)"/>
    <sshexec host="seph-lang.org" username="seph-lang.org" keyfile="${user.home}/.ssh/id_rsa" command="(cd /home/seph-lang.org/web/public/dist; ln -s seph-${VERSION_NUMBER}${VERSION_ADDITION}.tar.gz seph-latest.tar.gz)"/>
    <sshexec host="seph-lang.org" username="seph-lang.org" keyfile="${user.home}/.ssh/id_rsa" command="(cd /home/seph-lang.org/web/public/dist; ln -s seph-${VERSION_NUMBER}${VERSION_ADDITION}.zip seph-latest.zip)"/>
    <sshexec host="seph-lang.org" username="seph-lang.org" keyfile="${user.home}/.ssh/id_rsa" command="(cd /home/seph-lang.org/web/public/dist; ln -s seph-${VERSION_NUMBER}${VERSION_ADDITION}.jar seph-latest.jar)"/>
  </target>

  <target name="ci-dist-bin" depends="prepare">
    <tar destfile="${release.dir}/seph-${VERSION_NUMBER}${VERSION_ADDITION}.tar.gz" compression="gzip">
      <tarfileset mode="755" dir="." prefix="ioke">
        <include name="bin/*.bat"/>
        <include name="bin/seph"/>
      </tarfileset>

      <tarfileset dir="." prefix="seph">
        <include name="lib/seph*.jar"/>
        <include name="lib/seph/**"/>
        <include name="share/**"/>
        <include name="COPYING"/>
        <include name="LICENSE"/>
        <include name="LICENSE.kawa"/>
        <include name="README"/>
      </tarfileset>
    </tar>

    <zip destfile="${release.dir}/seph-${VERSION_NUMBER}${VERSION_ADDITION}.zip">
      <zipfileset filemode="755" dir="." prefix="seph">
        <include name="bin/*.bat"/>
        <include name="bin/seph"/>
      </zipfileset>

      <zipfileset dir="." prefix="seph">
        <include name="lib/seph*.jar"/>
        <include name="lib/seph/**"/>
        <include name="share/**"/>
        <include name="COPYING"/>
        <include name="LICENSE"/>
        <include name="LICENSE.kawa"/>
        <include name="README"/>
      </zipfileset>
    </zip>
  </target>

  <target name="dist" depends="dist-bin"/>
  <target name="ci-dist" depends="ci-dist-bin"/>

  <target name="ci-clean-dist" description="clean things from releases">
    <delete dir="${release.dir}"/>
  </target>

  <target name="clean" description="clean almost everything">
    <delete dir="${build.dir}"/>
    <delete dir="${src.gen.dir}"/>
    <delete file="${lib.dir}/seph.jar" quiet="true"/>
  </target>
</project>
